plugins {
    id "io.spring.dependency-management" version "1.0.6.RELEASE"
}

repositories {
    mavenCentral()
    maven { url "https://jcenter.bintray.com" }
}

dependencyManagement {
    imports {
        mavenBom 'io.micronaut:micronaut-bom:1.2.0'
    }
}

dependencies {
    testCompile project(":eventuate-tram-sagas-common-micronaut")

    compile "io.eventuate.common:eventuate-common-jdbc-micronaut-spring:$eventuateCommonVersion"

    testCompile project(":eventuate-jpa-sagas-framework")
    testCompile project(":eventuate-tram-sagas-simple-dsl")
    testCompile project(":eventuate-tram-sagas-participant-micronaut")
    testCompile project(":eventuate-tram-sagas-orchestration-micronaut")

    testCompile "io.eventuate.tram.core:eventuate-tram-events-micronaut:$eventuateTramVersion"
    testCompile "io.eventuate.tram.core:eventuate-tram-producer-jdbc-micronaut:$eventuateTramVersion"
    testCompile "io.eventuate.tram.core:eventuate-tram-consumer-jdbc-micronaut:$eventuateTramVersion"
    testCompile "io.eventuate.tram.core:eventuate-tram-messaging-micronaut:$eventuateTramVersion"
    testCompile "io.eventuate.tram.core:eventuate-tram-consumer-kafka-micronaut:$eventuateTramVersion"
    testCompile "io.eventuate.tram.core:eventuate-tram-events-micronaut:$eventuateTramVersion"

    compile 'mysql:mysql-connector-java:5.1.36'
    compile ('org.postgresql:postgresql:9.4-1200-jdbc41') {
        exclude group: "org.slf4j", module: "slf4j-simple"
    }

    annotationProcessor "io.micronaut:micronaut-inject-java"
    annotationProcessor "io.micronaut:micronaut-validation"
    annotationProcessor "io.micronaut.configuration:micronaut-openapi"
    compile "io.micronaut:micronaut-inject"
    compile "io.micronaut:micronaut-validation"
    compile "io.micronaut:micronaut-runtime"

    testAnnotationProcessor "io.micronaut:micronaut-inject-java"
    testAnnotationProcessor "io.micronaut:micronaut-validation"
    testAnnotationProcessor "io.micronaut.configuration:micronaut-openapi"
    testCompile "io.micronaut:micronaut-inject"
    testCompile "io.micronaut:micronaut-validation"
    testCompile "io.micronaut:micronaut-runtime"
    testAnnotationProcessor "io.micronaut:micronaut-inject-java"
    testCompile "org.junit.jupiter:junit-jupiter-api"
    testCompile "io.micronaut.test:micronaut-test-junit5"
    testRuntime "org.junit.jupiter:junit-jupiter-engine"
    testRuntime 'io.micronaut.configuration:micronaut-jdbc-hikari'
}

// use JUnit 5 platform
test {
    useJUnitPlatform()
}
